{
	"id": "34e3310be2c7c5d8b53fbbc7c78ef687",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.7",
	"solcLongVersion": "0.8.7+commit.e28d00a7",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/Estructura.sol": {
				"content": "// SPDX-License-Identifier: GPL-3.0\r\n\r\n//Siempre es apropiado tener un rango de 2 versiones\r\npragma solidity >=0.7.0 <0.9.0;\r\n\r\n//Declara el contrato con la palabra contract. Un .sol puede tener más de 1 contrato adentro. Pero se recomienda un contrato por archivo\r\n//Normalmente lleva el mismo nombre del archivo\r\ncontract Estructura {\r\n\r\n    //La función constructor no es obligatoria pero facilita la carga de datos al inicio del contrato\r\n\r\n\r\n    constructor () {\r\n        \r\n    //En solidity no hay decimales. Hay booleanos, address, int, uint, string y bytes. Una cadena sin formato específico\r\n    //Bytes se usa para guardar claves y hashes\r\n\r\n    //Hay dos tipos de variables las state variables: las que persisten y quedan almacenadas permanentementes (costoso de almacenar)\r\n    //\r\n\r\n\r\n    }\r\n\r\n}"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"contracts/Estructura.sol": {
				"Estructura": {
					"abi": [
						{
							"inputs": [],
							"stateMutability": "nonpayable",
							"type": "constructor"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/Estructura.sol\":316:811  contract Estructura {\r... */\n  mstore(0x40, 0x80)\n    /* \"contracts/Estructura.sol\":453:806  constructor () {\r... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n    /* \"contracts/Estructura.sol\":316:811  contract Estructura {\r... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/Estructura.sol\":316:811  contract Estructura {\r... */\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa264697066735822122029e378eee2b5557a84fd49d244a5b4f5af1615f3fb1e2b5b886076945aa3d5a264736f6c63430008070033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_5": {
									"entryPoint": null,
									"id": 5,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6080604052348015600f57600080fd5b50603f80601d6000396000f3fe6080604052600080fdfea264697066735822122029e378eee2b5557a84fd49d244a5b4f5af1615f3fb1e2b5b886076945aa3d5a264736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x3F DUP1 PUSH1 0x1D PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x29 0xE3 PUSH25 0xEEE2B5557A84FD49D244A5B4F5AF1615F3FB1E2B5B88607694 GAS LOG3 0xD5 LOG2 PUSH5 0x736F6C6343 STOP ADDMOD SMOD STOP CALLER ",
							"sourceMap": "316:495:0:-:0;;;453:353;;;;;;;;;;316:495;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "6080604052600080fdfea264697066735822122029e378eee2b5557a84fd49d244a5b4f5af1615f3fb1e2b5b886076945aa3d5a264736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x29 0xE3 PUSH25 0xEEE2B5557A84FD49D244A5B4F5AF1615F3FB1E2B5B88607694 GAS LOG3 0xD5 LOG2 PUSH5 0x736F6C6343 STOP ADDMOD SMOD STOP CALLER ",
							"sourceMap": "316:495:0:-:0;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "12600",
								"executionCost": "66",
								"totalCost": "12666"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 316,
									"end": 811,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 316,
									"end": 811,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 316,
									"end": 811,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 453,
									"end": 806,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 453,
									"end": 806,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 453,
									"end": 806,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 453,
									"end": 806,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 453,
									"end": 806,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 453,
									"end": 806,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 453,
									"end": 806,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 453,
									"end": 806,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 453,
									"end": 806,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 453,
									"end": 806,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 453,
									"end": 806,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 316,
									"end": 811,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 316,
									"end": 811,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 316,
									"end": 811,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 316,
									"end": 811,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 316,
									"end": 811,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 316,
									"end": 811,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 316,
									"end": 811,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122029e378eee2b5557a84fd49d244a5b4f5af1615f3fb1e2b5b886076945aa3d5a264736f6c63430008070033",
									".code": [
										{
											"begin": 316,
											"end": 811,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 316,
											"end": 811,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 316,
											"end": 811,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 316,
											"end": 811,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 316,
											"end": 811,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 316,
											"end": 811,
											"name": "REVERT",
											"source": 0
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Estructura.sol\":\"Estructura\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/Estructura.sol\":{\"keccak256\":\"0x4818fe9960652e14696a513d3f44418fe467954df1e5a0bff4270cdbd138e13a\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://584ecb1958ef88fd8f90b2ec542bce029c687d5ade29e5720d481b4034ac176b\",\"dweb:/ipfs/QmURPFzYQeb8fYJiQx4dC4MZ6fasTCygGb6mwKDFihq3h5\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"contracts/Estructura.sol": {
				"ast": {
					"absolutePath": "contracts/Estructura.sol",
					"exportedSymbols": {
						"Estructura": [
							6
						]
					},
					"id": 7,
					"license": "GPL-3.0",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								">=",
								"0.7",
								".0",
								"<",
								"0.9",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "93:31:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 6,
							"linearizedBaseContracts": [
								6
							],
							"name": "Estructura",
							"nameLocation": "325:10:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 4,
										"nodeType": "Block",
										"src": "468:338:0",
										"statements": []
									},
									"id": 5,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "465:2:0"
									},
									"returnParameters": {
										"id": 3,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "468:0:0"
									},
									"scope": 6,
									"src": "453:353:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 7,
							"src": "316:495:0",
							"usedErrors": []
						}
					],
					"src": "93:718:0"
				},
				"id": 0
			}
		}
	}
}