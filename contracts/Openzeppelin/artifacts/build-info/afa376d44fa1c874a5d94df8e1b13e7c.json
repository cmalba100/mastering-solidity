{
	"id": "afa376d44fa1c874a5d94df8e1b13e7c",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.7",
	"solcLongVersion": "0.8.7+commit.e28d00a7",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/Openzeppelin/DesafioUtil.sol": {
				"content": "// SPDX-License-Identifier: GPL-3.0\r\n\r\npragma solidity >=0.7.0 <0.9.0;\r\n\r\n//Objetivos: Construir un contrato que reciba la dirección de un contrato\r\n//ya implementado en la red e informar si pertenece a un ERC20 o ERC721\r\n\r\n//INTROSPECCIÓN: Analizar contratos desde adentro.\r\n//Contrato ERC 165. Contrato que verifica si otro contrato implementa o no otra interfaz\r\n//Debe contar con la función \"supportsInterface\" definida en IERC165\r\n//Tan solo es necesario proveer el ID de interface. tupe(IERC165).interfaceId;\r\n//Sirve para validar contratos que hagan herencia\r\n//ERC165Checker sirve para validar contratos externos a mi contrato, sobre sus direcciones\r\n\r\n\r\ncontract DesafioUtil {\r\n\r\n    constructor () \r\n    {}\r\n}"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"contracts/Openzeppelin/DesafioUtil.sol": {
				"DesafioUtil": {
					"abi": [
						{
							"inputs": [],
							"stateMutability": "nonpayable",
							"type": "constructor"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/Openzeppelin/DesafioUtil.sol\":666:722  contract DesafioUtil {\r... */\n  mstore(0x40, 0x80)\n    /* \"contracts/Openzeppelin/DesafioUtil.sol\":696:719  constructor () \r... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n    /* \"contracts/Openzeppelin/DesafioUtil.sol\":666:722  contract DesafioUtil {\r... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/Openzeppelin/DesafioUtil.sol\":666:722  contract DesafioUtil {\r... */\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220bb5743f76e05151b23d37b3d014022520977f6fb1214439cbb7b99e3617d168164736f6c63430008070033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_5": {
									"entryPoint": null,
									"id": 5,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6080604052348015600f57600080fd5b50603f80601d6000396000f3fe6080604052600080fdfea2646970667358221220bb5743f76e05151b23d37b3d014022520977f6fb1214439cbb7b99e3617d168164736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x3F DUP1 PUSH1 0x1D PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xBB JUMPI NUMBER 0xF7 PUSH15 0x5151B23D37B3D014022520977F6FB SLT EQ NUMBER SWAP13 0xBB PUSH28 0x99E3617D168164736F6C634300080700330000000000000000000000 ",
							"sourceMap": "666:56:0:-:0;;;696:23;;;;;;;;;;666:56;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "6080604052600080fdfea2646970667358221220bb5743f76e05151b23d37b3d014022520977f6fb1214439cbb7b99e3617d168164736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xBB JUMPI NUMBER 0xF7 PUSH15 0x5151B23D37B3D014022520977F6FB SLT EQ NUMBER SWAP13 0xBB PUSH28 0x99E3617D168164736F6C634300080700330000000000000000000000 ",
							"sourceMap": "666:56:0:-:0;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "12600",
								"executionCost": "66",
								"totalCost": "12666"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 666,
									"end": 722,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 666,
									"end": 722,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 666,
									"end": 722,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 696,
									"end": 719,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 696,
									"end": 719,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 696,
									"end": 719,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 696,
									"end": 719,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 696,
									"end": 719,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 696,
									"end": 719,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 696,
									"end": 719,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 696,
									"end": 719,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 696,
									"end": 719,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 696,
									"end": 719,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 696,
									"end": 719,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 666,
									"end": 722,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 666,
									"end": 722,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 666,
									"end": 722,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 666,
									"end": 722,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 666,
									"end": 722,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 666,
									"end": 722,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 666,
									"end": 722,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220bb5743f76e05151b23d37b3d014022520977f6fb1214439cbb7b99e3617d168164736f6c63430008070033",
									".code": [
										{
											"begin": 666,
											"end": 722,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 666,
											"end": 722,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 666,
											"end": 722,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 666,
											"end": 722,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 666,
											"end": 722,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 666,
											"end": 722,
											"name": "REVERT",
											"source": 0
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Openzeppelin/DesafioUtil.sol\":\"DesafioUtil\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/Openzeppelin/DesafioUtil.sol\":{\"keccak256\":\"0x6850b6f74277fea56b2ad68fdea712a0bc84f74bc51adbd774256b9c8edf78a3\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://46d84fea0ebcfb688c1d493678826fa82d807b1830b52ff1314b40ac887aed1a\",\"dweb:/ipfs/QmTXv48gx2cRVDWjWC61qBr9TCwAAWFBMmPqf3LSX3WCGW\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"contracts/Openzeppelin/DesafioUtil.sol": {
				"ast": {
					"absolutePath": "contracts/Openzeppelin/DesafioUtil.sol",
					"exportedSymbols": {
						"DesafioUtil": [
							6
						]
					},
					"id": 7,
					"license": "GPL-3.0",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								">=",
								"0.7",
								".0",
								"<",
								"0.9",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "39:31:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 6,
							"linearizedBaseContracts": [
								6
							],
							"name": "DesafioUtil",
							"nameLocation": "675:11:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 4,
										"nodeType": "Block",
										"src": "717:2:0",
										"statements": []
									},
									"id": 5,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "708:2:0"
									},
									"returnParameters": {
										"id": 3,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "717:0:0"
									},
									"scope": 6,
									"src": "696:23:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 7,
							"src": "666:56:0",
							"usedErrors": []
						}
					],
					"src": "39:683:0"
				},
				"id": 0
			}
		}
	}
}